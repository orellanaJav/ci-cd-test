name: Test Deleted

on:
  push:
    branches:
      - "crafting"

jobs:
  track-deleted-files:
    name: Changes
    runs-on: ubuntu-latest    
    outputs:
      stack: ${{ steps.filter.outputs.stack }}
    steps:
      - uses: actions/checkout@v2
      - name: Check changed files
        id: diff
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          export DIFF=$( git diff --diff-filter=D --name-only ${{ github.event.before }} $GITHUB_SHA )
          echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          echo "$DIFF"
          
          echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"          
      - name: Set matrix for delete stacks
        id: filter
        run: |
          DIFF="${{ steps.diff.outputs.diff }}"
          STACKS="${{ needs.stacks.outputs.listStacks }}"
          STAGE="${{ needs.get-stage-and-region.outputs.stage }}"
          REGION="${{ needs.get-stage-and-region.outputs.region }}"
          MAKE_FULL_DEPLOY=false
          STACK_NAME="hola mundo"
          COUNT_DELETED_FILES_IN_STACK=0
          COUNT_DELETED_FILES_IN_SERVICE=0

          git checkout $GITHUB_SHA

          jq -n '[]' > initial_json.json
          json_file=$(jq . initial_json.json)
          echo "aca cae?"
          echo "$json_file"
          INITIAL_DIRECTORY=$(pwd)



         
          if [ -z "$DIFF" ]; then
            echo "::set-output name=folders::[]"
          else
            JSON="["
            json_stack="["            
            while read path; do
              # Set $stack to substring before /
              stack="$( echo $path | cut -d'/' -f1 -s )"
              stack_mid_dash="$( echo $stack | tr _ - )"
              lambda="$( echo $path | cut -d'/' -f3 -s )"
              lambda_mid_dash="$( echo $lambda | tr _ - )"
              stack_cloudfront="$stack_mid_dash-$lambda_mid_dash-$STAGE"
              
              git checkout ${{ github.event.before }}
              cd "$stack"
              initial_files_in_stack=$(git ls-files | wc -l)




              VARIABLE=$(echo "$json_file" | jq -c '.[] | select(.stack_name == "'$stack'")')
              if [[ "$VARIABLE" ]]; then    
                COUNT_DELETED_FILES_STACK=$( echo "$VARIABLE" | jq -r '.files_deleted' )    
                COUNT_DELETED_FILES_STACK=$((COUNT_DELETED_FILES_STACK + 1))        
                jq --arg newkey "$COUNT_DELETED_FILES_STACK" '(.[] | select(.stack_name == "'$stack'")).files_deleted |= $newkey' initial_json.json > tmp_json.json
                json_file=$(jq . tmp_json.json)    
                echo "$json_file" > initial_json.json
              else    
                jq '.[. | length] |= . + {"stack_name": "'$stack'", "files_deleted": "1", "initial_files_in_stack": "'$initial_files_in_stack'"}' initial_json.json > tmp_json.json
                json_file=$(jq . tmp_json.json)    
                echo "$json_file" > initial_json.json
              fi




              # # Entrar al commit antes de eliminar
              # # cd "$stack/services/$lambda"
              # git ls-files | wc -l
              # pwd
              # ls -la
              # cd "$stack/services"
              # pwd
              # ls -la

              # echo "CAMBIANDO AL CHECKOUT DEL ELIMINADO"
              # git checkout ${{ github.event.before }}
              # git ls-files | wc -l                            
              # pwd
              # ls -la

              # if [[ "$stack" == *"$stack"* ]]; then
              #   COUNT_DELETED_FILES_IN_STACK=$((COUNT_DELETED_FILES_IN_STACK + 1))
              # fi


            # # ignore .github folder

            # if [[ "$stack" != ".github" && "$lambda" != "" && "$stack" != "" ]]; then

            #   stack_item_deleted="{\"stack_name\":\"$stack\",\"lambda\":\"$lambda\"},"              
                                          
            #   if [[ "$json_stack" != *"$stack_item_deleted"* ]]; then
            #     json_stack="$json_stack$stack_item_deleted"

            #   fi
            # fi
            
            # # vuelve a la raiz
            # cd
            cd $INITIAL_DIRECTORY

            done <<< "$DIFF"

            if [[ $json_stack == *, ]]; then
              json_stack="${json_stack%?}"
            fi
            json_stack="$json_stack]"
            echo $json_stack

            echo $(jq . initial_json.json)  | jq

            echo "::set-output name=stack::$( echo "$json_stack" )"
          fi